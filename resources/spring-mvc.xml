<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
         http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

 <!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
  <!-- 加载controller的时候,不加载service,因为此时事物并未生效,若此时加载了service,那么事物无法对service进行拦截 -->
 <context:component-scan base-package="com.yoxi.jgframework.*">
 	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
 </context:component-scan>
 
 <context:component-scan base-package="com.yoxi.pfhudongtui.*">
 	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
 </context:component-scan>
 
 <!-- <context:component-scan base-package="com.youxi.*.controllers.*" /> -->
 
 <!-- service bean 免配置 ,service类需添加@Service标识 -->
 <!--  <context:component-scan base-package="com.youxi.plugin.service.*" /> -->


 <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
 <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
  <property name="supportedMediaTypes">
   <list>
    <value>text/html;charset=UTF-8</value>
   </list>
  </property>
  <property name="objectMapper" ref="customJacksonObjectMapper"/>
 </bean>
 <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
  <property name="cacheSeconds" value="0" />
  <property name="messageConverters">
   <list>
    <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
   </list>
  </property>
  <property name="webBindingInitializer">
   <bean class="com.yoxi.jgframework.interceptors.CustomWebBinding" />
  </property>
 </bean>
 <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
 <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3">
  <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
  <property name="contentType" value="text/html" />
  <property name="prefix" value="/webpage/" />
  <property name="suffix" value=".jsp" />
 </bean>
 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="UTF-8">
  <property name="maxUploadSize">
   <value>104857600</value>
  </property>
  <property name="maxInMemorySize">
   <value>4096</value>
  </property>
 </bean>
  <!-- 方言 -->
  <bean id="dialect" class="com.yoxi.jgframework.common.hibernate.dialect.DialectFactoryBean">
   <property name="dbType" value="${jdbc.dbType}"/>
  </bean>
 <!-- 异常处理类 -->
 <bean id="exceptionHandler" class="com.yoxi.jgframework.common.exception.MyExceptionHandler" />
 <!-- 系统错误转发配置[并记录错误日志]   -->
<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
<property name="defaultErrorView" value="500"></property>   <!-- 默认为500，系统错误(error.jsp)  -->
<property name="defaultStatusCode" value="404"></property>
<property name="statusCodes"><!-- 配置多个statusCode -->
  <props>    
      <prop key="error">500</prop>  <!-- error.jsp -->
      <prop key="error1">404</prop>    <!-- error1.jsp -->
  </props>    
</property>    
<property name="exceptionMappings">
 <props>
  <!-- 这里你可以根据需要定义N多个错误异常转发 -->
  <prop key="java.sql.SQLException">dbError</prop> <!-- 数据库错误(dbError.jsp) -->
  <prop key="org.springframework.web.bind.ServletRequestBindingException">bizError</prop> <!-- 参数绑定错误(如：必须参数没传递)(bizError.jsp) -->
  <prop key="java.lang.IllegalArgumentException">bizError</prop>  <!-- 参数错误(bizError.jsp) -->
  <prop key="org.springframework.validation.BindException">bizError</prop>  <!-- 参数类型有误(bizError.jsp) -->
  <prop key="java.lang.Exception">unknowError</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp)  -->
 </props>
</property>
</bean>
<!-- <bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/webpage/template/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>                                                                                                                    
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="number_format">#</prop>
			</props>
		</property>
	</bean> -->
<!-- 	<bean id="pageOutBuilder" class="com.yoxi.pfhudongtui.ftlpage.PageOutBuilderImpl">
		<property name="freeMarkerConfigurer" ref="freeMarkerConfigurer" />
	</bean> -->

 <!-- 拦截器 -->
 <mvc:interceptors>
<!--  	<mvc:interceptor>
     	<mvc:mapping path="/**" />
   		<bean class="com.yoxi.jgframework.interceptors.EncodingInterceptor" />
  	</mvc:interceptor>  -->
 
  	<mvc:interceptor>
	   <mvc:mapping path="/**" />
	<!--    <bean class="com.yoxi.pfhudongtui.common.interceptors.LoginInterceptor" >
	   </bean> -->
	   
	   <bean class="com.yoxi.jgframework.interceptors.AuthInterceptor">
		   <property name="excludeUrls">
		     <list>
	<!-- 	     	  <value>agentInfoController.do?agentInfo</value>
		     	  <value>agentInfoController.do?addorupdateAgentInfo</value>
		     	   <value>agentInfoController.do?agentInfoGrid</value> -->
			      <value>loginController.do?goPwdInit</value>
			      <value>loginController.do?pwdInit</value>
			      <value>ftlController.do?showhtml</value>
			      <value>loginController.do?login</value>
			      <value>loginController.do?checkuser</value>
			      <value>systemController.do?saveFiles</value>
			      <value>systemController.do?saveNews</value>
			      <value>iconController.do?saveIcon</value>
			      <value>userController.do?savesign</value>
			      <value>jpPersonController.do?importExcel</value>    
			      <value>alipayController/back.do</value>  
			      <value>alipayController/successPay.do</value>  
		     </list>
		    </property>
	    </bean>
	  </mvc:interceptor>
 </mvc:interceptors>
</beans>